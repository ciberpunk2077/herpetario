# Generated by Django 2.0.8 on 2021-12-02 21:00

import apps.catalogo.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('administrador', models.BooleanField(default=False)),
                ('capturista', models.BooleanField(default=False)),
                ('usuario', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Especie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.CharField(max_length=500)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.CharField(max_length=500)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Serpientes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genero', models.IntegerField(blank=True, choices=[(1, 'Masculino'), (2, 'Femenino'), (3, 'Hermafrodita')], null=True)),
                ('venenosa', models.IntegerField(blank=True, choices=[(1, 'Si'), (2, 'No')], null=True)),
                ('nombre_comun', models.CharField(blank=True, max_length=200, null=True)),
                ('nombre_cientifico', models.CharField(max_length=200)),
                ('area_distribucion', models.CharField(blank=True, max_length=500, null=True)),
                ('categoria_riesgo', models.CharField(blank=True, max_length=500, null=True)),
                ('dieta', models.CharField(blank=True, max_length=500, null=True)),
                ('orden', models.CharField(blank=True, max_length=200, null=True)),
                ('suborden', models.CharField(blank=True, max_length=200, null=True)),
                ('nombre_del_cientifico', models.CharField(blank=True, max_length=200, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=500, null=True)),
                ('imagen', models.FileField(blank=True, null=True, upload_to=apps.catalogo.models.Serpientes.get_upload_path_imagen)),
                ('referencia_bibliografica', models.CharField(blank=True, max_length=300, null=True)),
                ('especie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogo.Especie')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='especie',
            name='familia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogo.Familia'),
        ),
    ]
